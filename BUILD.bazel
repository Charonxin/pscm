load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load("version.bzl", "gen_pscm_version_header")
load("test.bzl", "collect_pscm_tests")

gen_pscm_version_header(
    name = "pscm-version-header",
    git_branch = "unknown",
    git_hash = "unknown",
    header_file = "include/pscm/version.h",
    version_major = "0",
    version_minor = "3",
    version_patch = "0",
)

cc_library(
    name = "pscm",
    srcs = glob(
        [
            "src/*.cpp",
        ],
    ),
    hdrs = glob(
        ["include/pscm/*.h"],
    ) + [
        ":include/pscm/version.h",
    ],
    copts = select({
        # disable error: result of comparison of constant -1 with expression of type 'char' is always false
        "@platforms//cpu:wasm32": [
            "-Wno-tautological-constant-out-of-range-compare",
            "-std=c++20",
        ],
        "//conditions:default": ["-std=c++14"],
    }),
    defines = select({
        "@platforms//cpu:wasm32": ["WASM_PLATFORM"],
        "//conditions:default": [],
    }),
    features = select({
        # only wasm need add exceptions explict
        "@platforms//cpu:wasm32": [
            "exceptions",
        ],
        "//conditions:default": [],
    }),
    includes = [
        "include",
    ],
    linkopts = select({
        "@platforms//cpu:wasm32": [
            "-sEXPORTED_RUNTIME_METHODS=ccall,cwrap",
            "-sSTACK_SIZE=6553600",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//3rd:cpp-linenoise",
        "//3rd:std-compat",
        "//3rd:ust",
        "@spdlog",
    ],
)

cc_binary(
    name = "pscm-main",
    srcs = ["main.cpp"],
    copts = ["-std=c++20"],
    deps = [":pscm"],
)

collect_pscm_tests()
